name: Auto Build & Release Rust Binary (latest)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: aarch64-pc-windows-msvc
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - name: Determine archive name
        shell: bash
        run: |
          echo "ARCHIVE="safe_rm-${{ matrix.target }}.exe" >> $GITHUB_ENV

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
     
      - name: Install Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Build Release Binary
        run: |
          cargo build --release --target ${{ matrix.target }}
          mv "target/${{ matrix.target }}/release/safe_rm.exe"
          7z a "$ARCHIVE.zip" safe_rm.exe
          echo "ASSET=$ARCHIVE.zip" >> $GITHUB_ENV
          echo "ASSET_SUM=$ARCHIVE.zip.sha256" >> $GITHUB_ENV
          certutil -hashfile "$ARCHIVE.zip" SHA256 > "$ARCHIVE.zip.sha256"

      - name: Upload Binary as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.target }}
          path: |
            ${{ ASSET }}
            ${{ ASSET_SUM }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download All Binaries
        uses: actions/download-artifact@v4
        with:
          path: build*

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: build*
        env:
          GITHUB_TOKEN: ${{ secrets.GENSHIN_IMPACT_RELEASE }}
